version: '3'
services:
  adminer:
    container_name: 'adminer'
    image: adminer
    ports:
      - 8080:8080
    networks:
      - simplebank

  api_gateway:
    container_name: api_gateway
    build: ./api_gateway
    restart: always
    volumes:
      - ./api_gateway:/api_gateway
      - /api_gateway/venv/ # mounts as an empty folder.
    environment:
      - ORDERS_SERVICE_PORT=$ORDERS_SERVICE_PORT
    ports:
    - $API_GATEWAY_PORT:$API_GATEWAY_PORT
    networks:
      - simplebank

  fees_service:
    container_name: fees_service
    build: ./fees_service
    restart: always
    volumes:
      - ./fees_service:/go/src/github.com/simplebank/fees_service/
    networks:
      - simplebank
    depends_on:
      - order_event_queue

  market_service:
    container_name: market_service
    build: ./market_service
    restart: always
    volumes:
      - ./market_service:/market_service
    environment:
      - ORDER_EQ_PASSWORD=$ORDER_EQ_PASSWORD
      - ORDER_EQ_PORT=$ORDER_EQ_PORT
      - ORDER_EQ_USER=$ORDER_EQ_USER
    networks:
      - simplebank
    depends_on:
      - order_event_queue

  order_db:
    container_name: order_db
    build: ./order_db
    restart: always
    environment:
      - POSTGRES_DB=$ORDER_DB_NAME
      - POSTGRES_PASSWORD=$ORDER_DB_PASSWORD
      - POSTGRES_USER=$ORDER_DB_USER
    expose:
    - $ORDER_DB_PORT
    networks:
      - simplebank

  order_event_queue:
    container_name: order_event_queue
    image: rabbitmq:3-management
    restart: always
    ports:
    - $ORDER_EQ_ADMINER_PORT:$ORDER_EQ_ADMINER_PORT
    volumes:
      - ./order_event_queue:/var/lib/rabbitmq
    environment:
      - RABBITMQ_ERLANG_COOKIE=cluster_cookie
      - RABBITMQ_DEFAULT_USER=$ORDER_EQ_USER
      - RABBITMQ_DEFAULT_PASS=$ORDER_EQ_PASSWORD
    networks:
     - simplebank

  orders_service:
    container_name: orders_service
    build: ./orders_service
    restart: always
    volumes:
      - ./orders_service:/orders_service
    environment:
      - DB_NAME=$ORDERS_DB_NAME
      - DB_PASSWORD=$ORDERS_DB_PASSWORD
      - DB_PORT=$ORDERS_DB_PORT
      - DB_USER=$ORDERS_DB_USER
      - ORDERS_EQ_PASSWORD=$ORDERS_EQ_PASSWORD
      - ORDERS_EQ_PORT=$ORDERS_EQ_PORT
      - ORDERS_EQ_USER=$ORDERS_EQ_USER
      - ORDERS_SERVICE_PORT=$ORDERS_SERVICE_PORT
    expose:
      - $ORDERS_SERVICE_PORT
    networks:
      - simplebank

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.0
    expose:
      - "9200"
      - "9300"
    environment:
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - simplebank

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:6.7.0
    ports:
      - "5601:5601"
    environment:
      - "xpack.security.enabled=false"
    depends_on:
      - "elasticsearch"
    networks:
      - simplebank

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:5.2.2
    expose:
      - "25826"
    volumes:
      - $PWD/logstash:/logstash
    command: logstash -f /logstash/logstash.config
    depends_on:
      - "elasticsearch"
    networks:
      - simplebank

  logspout:
    container_name: logspout
    image: gliderlabs/logspout:v3
    command: "udp://logstash:25826"
    restart: always
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock"
    depends_on:
       - elasticsearch
       - logstash
       - kibana
    networks:
      - simplebank

networks:
  simplebank:
